import asyncio
from telethon import TelegramClient
from telethon.tl.types import ChannelParticipantsAdmins
from config import API_ID, API_HASH, PHONE, TARGET_CHANNEL

async def check_channel_permissions():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ü–µ–ª–µ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
    """
    client = TelegramClient('test_session', API_ID, API_HASH)
    
    try:
        await client.start(phone=PHONE)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Telegram")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª–µ–≤–æ–º –∫–∞–Ω–∞–ª–µ
        target = await client.get_entity(TARGET_CHANNEL)
        print(f"üéØ –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª: {target.title}")
        print(f"üÜî ID: {target.id}")
        print(f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {getattr(target, 'participants_count', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        try:
            me = await client.get_me()
            print(f"üë§ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç: {me.first_name} ({me.username or '–±–µ–∑ username'})")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ (–≤–∞—Å)
            participant = await client.get_permissions(target, me)
            print(f"üìù –í–∞—à–∏ –ø—Ä–∞–≤–∞ –≤ –∫–∞–Ω–∞–ª–µ:")
            print(f"   - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {participant.is_admin}")
            print(f"   - –°–æ–∑–¥–∞—Ç–µ–ª—å: {participant.is_creator}")
            print(f"   - –ú–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {participant.post_messages}")
            print(f"   - –ú–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –∫–∞–Ω–∞–ª: {participant.change_info}")
            
            if not participant.post_messages and not participant.is_admin:
                print("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!")
                print("üí° –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å–µ–±–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª")
            else:
                print("‚úÖ –£ –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π")
                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤: {e}")
            
        # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            test_message = await client.send_message(target, "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–æ–Ω–µ—Ä–∞ –∫–∞–Ω–∞–ª–æ–≤")
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await asyncio.sleep(2)
            await client.delete_messages(target, test_message)
            print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await client.disconnect()

if __name__ == '__main__':
    asyncio.run(check_channel_permissions())
